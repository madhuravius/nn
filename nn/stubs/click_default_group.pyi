from typing import Any

import click
from _typeshed import Incomplete
from click import Command, Context, HelpFormatter

class DefaultGroup(click.Group):
    ignore_unknown_options: bool
    default_cmd_name: Incomplete
    default_if_no_args: Incomplete
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def set_default_command(self, command: Any) -> None: ...
    def parse_args(self, ctx: Context, args: list[str]) -> list[str]: ...
    def get_command(self, ctx: Context, cmd_name: str) -> Command: ...
    def resolve_command(
        self, ctx: Context, args: list[str]
    ) -> tuple[str | None, Command | None, list[str]]: ...
    def format_commands(self, ctx: Context, formatter: HelpFormatter) -> None: ...
    def command(self, *args: Any, **kwargs: Any) -> Any: ...

class DefaultCommandFormatter:
    group: Incomplete
    formatter: Incomplete
    mark: Incomplete
    def __init__(self, group: Any, formatter: Any, mark: str = ...) -> None: ...
    def __getattr__(self, attr: Any) -> None: ...
    def write_dl(self, rows: Any, *args: Any, **kwargs: Any) -> None: ...
